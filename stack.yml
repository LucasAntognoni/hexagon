AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  BucketName:
    Type: String
    Default: "data-storage"

Resources:

  DataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "TIMESTAMP"
          AttributeType: N
        - AttributeName: "ID"
          AttributeType: N
      KeySchema:
        - AttributeName: "TIMESTAMP"
          KeyType: HASH
        - AttributeName: "ID"
          KeyType: RANGE

  DataBucket:
    Type: AWS::S3::Bucket
    DependsOn: InvokeLambdaPermission
    Properties:
      BucketName: !Ref BucketName
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: 's3:ObjectCreated:*'
            Function: !GetAtt LambdaFunction.Arn
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: ".csv"

  InvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref LambdaFunction
      Principal: s3.amazonaws.com
      SourceAccount: !Ref "AWS::AccountId"
      SourceArn: !Sub "arn:aws:s3:::${BucketName}"

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: "process_csv"
      Handler: "lambda_function.lambda_handler"
      Role: !GetAtt LambdaRole.Arn
      Code:
        S3Bucket: !Sub "lambda-source-${AWS::AccountId}"
        S3Key: "lambda.zip"
      Runtime: "python3.8"
      MemorySize: 512
      Timeout: 150
      ReservedConcurrentExecutions: 1
      Environment:
        Variables:
          DATA_TABLE: !Ref DataTable
          DATA_BUCKET: !Ref BucketName

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      RoleName: "lambda_role"

  LambdaRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref LambdaRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:BatchWriteItem
            Resource: !GetAtt DataTable.Arn
          - Effect: Allow
            Action:
              - s3:GetBucketLocation
              - s3:ListBucket
            Resource: !GetAtt DataBucket.Arn
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:GetObjectAcl
              - s3:PutObject
              - s3:PutObjectAcl
              - s3:DeleteObject
            Resource: !Join
              - ''
              - - !GetAtt DataBucket.Arn
                - "/*"
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
      PolicyName: "lambda_role_policy"
